// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: hello.proto
// Protobuf C++ Version: 5.29.0

#ifndef hello_2eproto_2epb_2eh
#define hello_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_hello_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_hello_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_hello_2eproto;
namespace hello {
class greeting;
struct greetingDefaultTypeInternal;
extern greetingDefaultTypeInternal _greeting_default_instance_;
class hello;
struct helloDefaultTypeInternal;
extern helloDefaultTypeInternal _hello_default_instance_;
class helloreply;
struct helloreplyDefaultTypeInternal;
extern helloreplyDefaultTypeInternal _helloreply_default_instance_;
class hellorequest;
struct hellorequestDefaultTypeInternal;
extern hellorequestDefaultTypeInternal _hellorequest_default_instance_;
}  // namespace hello
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace hello {
enum hello_GREET : int {
  hello_GREET_HI = 0,
  hello_GREET_BYE = 1,
  hello_GREET_hello_GREET_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  hello_GREET_hello_GREET_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool hello_GREET_IsValid(int value);
extern const uint32_t hello_GREET_internal_data_[];
constexpr hello_GREET hello_GREET_GREET_MIN = static_cast<hello_GREET>(0);
constexpr hello_GREET hello_GREET_GREET_MAX = static_cast<hello_GREET>(1);
constexpr int hello_GREET_GREET_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
hello_GREET_descriptor();
template <typename T>
const std::string& hello_GREET_Name(T value) {
  static_assert(std::is_same<T, hello_GREET>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to GREET_Name().");
  return hello_GREET_Name(static_cast<hello_GREET>(value));
}
template <>
inline const std::string& hello_GREET_Name(hello_GREET value) {
  return ::google::protobuf::internal::NameOfDenseEnum<hello_GREET_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool hello_GREET_Parse(absl::string_view name, hello_GREET* value) {
  return ::google::protobuf::internal::ParseNamedEnum<hello_GREET>(
      hello_GREET_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class hellorequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:hello.hellorequest) */ {
 public:
  inline hellorequest() : hellorequest(nullptr) {}
  ~hellorequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(hellorequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(hellorequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR hellorequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline hellorequest(const hellorequest& from) : hellorequest(nullptr, from) {}
  inline hellorequest(hellorequest&& from) noexcept
      : hellorequest(nullptr, std::move(from)) {}
  inline hellorequest& operator=(const hellorequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline hellorequest& operator=(hellorequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const hellorequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const hellorequest* internal_default_instance() {
    return reinterpret_cast<const hellorequest*>(
        &_hellorequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(hellorequest& a, hellorequest& b) { a.Swap(&b); }
  inline void Swap(hellorequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(hellorequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  hellorequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<hellorequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const hellorequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const hellorequest& from) { hellorequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(hellorequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "hello.hellorequest"; }

 protected:
  explicit hellorequest(::google::protobuf::Arena* arena);
  hellorequest(::google::protobuf::Arena* arena, const hellorequest& from);
  hellorequest(::google::protobuf::Arena* arena, hellorequest&& from) noexcept
      : hellorequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
  };
  // int64 index = 1;
  void clear_index() ;
  ::int64_t index() const;
  void set_index(::int64_t value);

  private:
  ::int64_t _internal_index() const;
  void _internal_set_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:hello.hellorequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const hellorequest& from_msg);
    ::int64_t index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hello_2eproto;
};
// -------------------------------------------------------------------

class helloreply final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:hello.helloreply) */ {
 public:
  inline helloreply() : helloreply(nullptr) {}
  ~helloreply() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(helloreply* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(helloreply));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR helloreply(
      ::google::protobuf::internal::ConstantInitialized);

  inline helloreply(const helloreply& from) : helloreply(nullptr, from) {}
  inline helloreply(helloreply&& from) noexcept
      : helloreply(nullptr, std::move(from)) {}
  inline helloreply& operator=(const helloreply& from) {
    CopyFrom(from);
    return *this;
  }
  inline helloreply& operator=(helloreply&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const helloreply& default_instance() {
    return *internal_default_instance();
  }
  static inline const helloreply* internal_default_instance() {
    return reinterpret_cast<const helloreply*>(
        &_helloreply_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(helloreply& a, helloreply& b) { a.Swap(&b); }
  inline void Swap(helloreply* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(helloreply* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  helloreply* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<helloreply>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const helloreply& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const helloreply& from) { helloreply::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(helloreply* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "hello.helloreply"; }

 protected:
  explicit helloreply(::google::protobuf::Arena* arena);
  helloreply(::google::protobuf::Arena* arena, const helloreply& from);
  helloreply(::google::protobuf::Arena* arena, helloreply&& from) noexcept
      : helloreply(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexFieldNumber = 1,
  };
  // int64 index = 1;
  void clear_index() ;
  ::int64_t index() const;
  void set_index(::int64_t value);

  private:
  ::int64_t _internal_index() const;
  void _internal_set_index(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:hello.helloreply)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const helloreply& from_msg);
    ::int64_t index_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hello_2eproto;
};
// -------------------------------------------------------------------

class greeting final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:hello.greeting) */ {
 public:
  inline greeting() : greeting(nullptr) {}
  ~greeting() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(greeting* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(greeting));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR greeting(
      ::google::protobuf::internal::ConstantInitialized);

  inline greeting(const greeting& from) : greeting(nullptr, from) {}
  inline greeting(greeting&& from) noexcept
      : greeting(nullptr, std::move(from)) {}
  inline greeting& operator=(const greeting& from) {
    CopyFrom(from);
    return *this;
  }
  inline greeting& operator=(greeting&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const greeting& default_instance() {
    return *internal_default_instance();
  }
  static inline const greeting* internal_default_instance() {
    return reinterpret_cast<const greeting*>(
        &_greeting_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(greeting& a, greeting& b) { a.Swap(&b); }
  inline void Swap(greeting* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(greeting* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  greeting* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<greeting>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const greeting& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const greeting& from) { greeting::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(greeting* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "hello.greeting"; }

 protected:
  explicit greeting(::google::protobuf::Arena* arena);
  greeting(::google::protobuf::Arena* arena, const greeting& from);
  greeting(::google::protobuf::Arena* arena, greeting&& from) noexcept
      : greeting(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStringFieldFieldNumber = 2,
    kBoolFieldFieldNumber = 1,
  };
  // string string_field = 2;
  void clear_string_field() ;
  const std::string& string_field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_field(Arg_&& arg, Args_... args);
  std::string* mutable_string_field();
  PROTOBUF_NODISCARD std::string* release_string_field();
  void set_allocated_string_field(std::string* value);

  private:
  const std::string& _internal_string_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_field(
      const std::string& value);
  std::string* _internal_mutable_string_field();

  public:
  // bool bool_field = 1;
  void clear_bool_field() ;
  bool bool_field() const;
  void set_bool_field(bool value);

  private:
  bool _internal_bool_field() const;
  void _internal_set_bool_field(bool value);

  public:
  // @@protoc_insertion_point(class_scope:hello.greeting)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const greeting& from_msg);
    ::google::protobuf::internal::ArenaStringPtr string_field_;
    bool bool_field_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hello_2eproto;
};
// -------------------------------------------------------------------

class hello final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:hello.hello) */ {
 public:
  inline hello() : hello(nullptr) {}
  ~hello() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(hello* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(hello));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR hello(
      ::google::protobuf::internal::ConstantInitialized);

  inline hello(const hello& from) : hello(nullptr, from) {}
  inline hello(hello&& from) noexcept
      : hello(nullptr, std::move(from)) {}
  inline hello& operator=(const hello& from) {
    CopyFrom(from);
    return *this;
  }
  inline hello& operator=(hello&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const hello& default_instance() {
    return *internal_default_instance();
  }
  static inline const hello* internal_default_instance() {
    return reinterpret_cast<const hello*>(
        &_hello_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(hello& a, hello& b) { a.Swap(&b); }
  inline void Swap(hello* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(hello* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  hello* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<hello>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const hello& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const hello& from) { hello::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(hello* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "hello.hello"; }

 protected:
  explicit hello(::google::protobuf::Arena* arena);
  hello(::google::protobuf::Arena* arena, const hello& from);
  hello(::google::protobuf::Arena* arena, hello&& from) noexcept
      : hello(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using GREET = hello_GREET;
  static constexpr GREET HI = hello_GREET_HI;
  static constexpr GREET BYE = hello_GREET_BYE;
  static inline bool GREET_IsValid(int value) {
    return hello_GREET_IsValid(value);
  }
  static constexpr GREET GREET_MIN = hello_GREET_GREET_MIN;
  static constexpr GREET GREET_MAX = hello_GREET_GREET_MAX;
  static constexpr int GREET_ARRAYSIZE = hello_GREET_GREET_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* GREET_descriptor() {
    return hello_GREET_descriptor();
  }
  template <typename T>
  static inline const std::string& GREET_Name(T value) {
    return hello_GREET_Name(value);
  }
  static inline bool GREET_Parse(absl::string_view name, GREET* value) {
    return hello_GREET_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kFloatArrayFieldFieldNumber = 4,
    kStringFieldFieldNumber = 1,
    kStructFieldFieldNumber = 6,
    kIntFieldFieldNumber = 2,
    kDoubleFieldFieldNumber = 3,
    kEnumFieldFieldNumber = 5,
  };
  // repeated float float_array_field = 4;
  int float_array_field_size() const;
  private:
  int _internal_float_array_field_size() const;

  public:
  void clear_float_array_field() ;
  float float_array_field(int index) const;
  void set_float_array_field(int index, float value);
  void add_float_array_field(float value);
  const ::google::protobuf::RepeatedField<float>& float_array_field() const;
  ::google::protobuf::RepeatedField<float>* mutable_float_array_field();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_float_array_field() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_float_array_field();

  public:
  // string string_field = 1;
  void clear_string_field() ;
  const std::string& string_field() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_string_field(Arg_&& arg, Args_... args);
  std::string* mutable_string_field();
  PROTOBUF_NODISCARD std::string* release_string_field();
  void set_allocated_string_field(std::string* value);

  private:
  const std::string& _internal_string_field() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_string_field(
      const std::string& value);
  std::string* _internal_mutable_string_field();

  public:
  // .hello.greeting struct_field = 6;
  bool has_struct_field() const;
  void clear_struct_field() ;
  const ::hello::greeting& struct_field() const;
  PROTOBUF_NODISCARD ::hello::greeting* release_struct_field();
  ::hello::greeting* mutable_struct_field();
  void set_allocated_struct_field(::hello::greeting* value);
  void unsafe_arena_set_allocated_struct_field(::hello::greeting* value);
  ::hello::greeting* unsafe_arena_release_struct_field();

  private:
  const ::hello::greeting& _internal_struct_field() const;
  ::hello::greeting* _internal_mutable_struct_field();

  public:
  // int64 int_field = 2;
  void clear_int_field() ;
  ::int64_t int_field() const;
  void set_int_field(::int64_t value);

  private:
  ::int64_t _internal_int_field() const;
  void _internal_set_int_field(::int64_t value);

  public:
  // double double_field = 3;
  void clear_double_field() ;
  double double_field() const;
  void set_double_field(double value);

  private:
  double _internal_double_field() const;
  void _internal_set_double_field(double value);

  public:
  // .hello.hello.GREET enum_field = 5;
  void clear_enum_field() ;
  ::hello::hello_GREET enum_field() const;
  void set_enum_field(::hello::hello_GREET value);

  private:
  ::hello::hello_GREET _internal_enum_field() const;
  void _internal_set_enum_field(::hello::hello_GREET value);

  public:
  // @@protoc_insertion_point(class_scope:hello.hello)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      32, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const hello& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> float_array_field_;
    ::google::protobuf::internal::ArenaStringPtr string_field_;
    ::hello::greeting* struct_field_;
    ::int64_t int_field_;
    double double_field_;
    int enum_field_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_hello_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// greeting

// bool bool_field = 1;
inline void greeting::clear_bool_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool_field_ = false;
}
inline bool greeting::bool_field() const {
  // @@protoc_insertion_point(field_get:hello.greeting.bool_field)
  return _internal_bool_field();
}
inline void greeting::set_bool_field(bool value) {
  _internal_set_bool_field(value);
  // @@protoc_insertion_point(field_set:hello.greeting.bool_field)
}
inline bool greeting::_internal_bool_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bool_field_;
}
inline void greeting::_internal_set_bool_field(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bool_field_ = value;
}

// string string_field = 2;
inline void greeting::clear_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.ClearToEmpty();
}
inline const std::string& greeting::string_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:hello.greeting.string_field)
  return _internal_string_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void greeting::set_string_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:hello.greeting.string_field)
}
inline std::string* greeting::mutable_string_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string_field();
  // @@protoc_insertion_point(field_mutable:hello.greeting.string_field)
  return _s;
}
inline const std::string& greeting::_internal_string_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_field_.Get();
}
inline void greeting::_internal_set_string_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.Set(value, GetArena());
}
inline std::string* greeting::_internal_mutable_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_field_.Mutable( GetArena());
}
inline std::string* greeting::release_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:hello.greeting.string_field)
  return _impl_.string_field_.Release();
}
inline void greeting::set_allocated_string_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.string_field_.IsDefault()) {
    _impl_.string_field_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.greeting.string_field)
}

// -------------------------------------------------------------------

// hello

// string string_field = 1;
inline void hello::clear_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.ClearToEmpty();
}
inline const std::string& hello::string_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:hello.hello.string_field)
  return _internal_string_field();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void hello::set_string_field(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:hello.hello.string_field)
}
inline std::string* hello::mutable_string_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_string_field();
  // @@protoc_insertion_point(field_mutable:hello.hello.string_field)
  return _s;
}
inline const std::string& hello::_internal_string_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.string_field_.Get();
}
inline void hello::_internal_set_string_field(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.Set(value, GetArena());
}
inline std::string* hello::_internal_mutable_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.string_field_.Mutable( GetArena());
}
inline std::string* hello::release_string_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:hello.hello.string_field)
  return _impl_.string_field_.Release();
}
inline void hello::set_allocated_string_field(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.string_field_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.string_field_.IsDefault()) {
    _impl_.string_field_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:hello.hello.string_field)
}

// int64 int_field = 2;
inline void hello::clear_int_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int_field_ = ::int64_t{0};
}
inline ::int64_t hello::int_field() const {
  // @@protoc_insertion_point(field_get:hello.hello.int_field)
  return _internal_int_field();
}
inline void hello::set_int_field(::int64_t value) {
  _internal_set_int_field(value);
  // @@protoc_insertion_point(field_set:hello.hello.int_field)
}
inline ::int64_t hello::_internal_int_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.int_field_;
}
inline void hello::_internal_set_int_field(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.int_field_ = value;
}

// double double_field = 3;
inline void hello::clear_double_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.double_field_ = 0;
}
inline double hello::double_field() const {
  // @@protoc_insertion_point(field_get:hello.hello.double_field)
  return _internal_double_field();
}
inline void hello::set_double_field(double value) {
  _internal_set_double_field(value);
  // @@protoc_insertion_point(field_set:hello.hello.double_field)
}
inline double hello::_internal_double_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.double_field_;
}
inline void hello::_internal_set_double_field(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.double_field_ = value;
}

// repeated float float_array_field = 4;
inline int hello::_internal_float_array_field_size() const {
  return _internal_float_array_field().size();
}
inline int hello::float_array_field_size() const {
  return _internal_float_array_field_size();
}
inline void hello::clear_float_array_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.float_array_field_.Clear();
}
inline float hello::float_array_field(int index) const {
  // @@protoc_insertion_point(field_get:hello.hello.float_array_field)
  return _internal_float_array_field().Get(index);
}
inline void hello::set_float_array_field(int index, float value) {
  _internal_mutable_float_array_field()->Set(index, value);
  // @@protoc_insertion_point(field_set:hello.hello.float_array_field)
}
inline void hello::add_float_array_field(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_float_array_field()->Add(value);
  // @@protoc_insertion_point(field_add:hello.hello.float_array_field)
}
inline const ::google::protobuf::RepeatedField<float>& hello::float_array_field() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:hello.hello.float_array_field)
  return _internal_float_array_field();
}
inline ::google::protobuf::RepeatedField<float>* hello::mutable_float_array_field()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:hello.hello.float_array_field)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_float_array_field();
}
inline const ::google::protobuf::RepeatedField<float>&
hello::_internal_float_array_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.float_array_field_;
}
inline ::google::protobuf::RepeatedField<float>* hello::_internal_mutable_float_array_field() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.float_array_field_;
}

// .hello.hello.GREET enum_field = 5;
inline void hello::clear_enum_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_field_ = 0;
}
inline ::hello::hello_GREET hello::enum_field() const {
  // @@protoc_insertion_point(field_get:hello.hello.enum_field)
  return _internal_enum_field();
}
inline void hello::set_enum_field(::hello::hello_GREET value) {
  _internal_set_enum_field(value);
  // @@protoc_insertion_point(field_set:hello.hello.enum_field)
}
inline ::hello::hello_GREET hello::_internal_enum_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::hello::hello_GREET>(_impl_.enum_field_);
}
inline void hello::_internal_set_enum_field(::hello::hello_GREET value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.enum_field_ = value;
}

// .hello.greeting struct_field = 6;
inline bool hello::has_struct_field() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.struct_field_ != nullptr);
  return value;
}
inline void hello::clear_struct_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.struct_field_ != nullptr) _impl_.struct_field_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::hello::greeting& hello::_internal_struct_field() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::hello::greeting* p = _impl_.struct_field_;
  return p != nullptr ? *p : reinterpret_cast<const ::hello::greeting&>(::hello::_greeting_default_instance_);
}
inline const ::hello::greeting& hello::struct_field() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:hello.hello.struct_field)
  return _internal_struct_field();
}
inline void hello::unsafe_arena_set_allocated_struct_field(::hello::greeting* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.struct_field_);
  }
  _impl_.struct_field_ = reinterpret_cast<::hello::greeting*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:hello.hello.struct_field)
}
inline ::hello::greeting* hello::release_struct_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hello::greeting* released = _impl_.struct_field_;
  _impl_.struct_field_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::hello::greeting* hello::unsafe_arena_release_struct_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:hello.hello.struct_field)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::hello::greeting* temp = _impl_.struct_field_;
  _impl_.struct_field_ = nullptr;
  return temp;
}
inline ::hello::greeting* hello::_internal_mutable_struct_field() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.struct_field_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::hello::greeting>(GetArena());
    _impl_.struct_field_ = reinterpret_cast<::hello::greeting*>(p);
  }
  return _impl_.struct_field_;
}
inline ::hello::greeting* hello::mutable_struct_field() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::hello::greeting* _msg = _internal_mutable_struct_field();
  // @@protoc_insertion_point(field_mutable:hello.hello.struct_field)
  return _msg;
}
inline void hello::set_allocated_struct_field(::hello::greeting* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.struct_field_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.struct_field_ = reinterpret_cast<::hello::greeting*>(value);
  // @@protoc_insertion_point(field_set_allocated:hello.hello.struct_field)
}

// -------------------------------------------------------------------

// hellorequest

// int64 index = 1;
inline void hellorequest::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = ::int64_t{0};
}
inline ::int64_t hellorequest::index() const {
  // @@protoc_insertion_point(field_get:hello.hellorequest.index)
  return _internal_index();
}
inline void hellorequest::set_index(::int64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:hello.hellorequest.index)
}
inline ::int64_t hellorequest::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void hellorequest::_internal_set_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// helloreply

// int64 index = 1;
inline void helloreply::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = ::int64_t{0};
}
inline ::int64_t helloreply::index() const {
  // @@protoc_insertion_point(field_get:hello.helloreply.index)
  return _internal_index();
}
inline void helloreply::set_index(::int64_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:hello.helloreply.index)
}
inline ::int64_t helloreply::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void helloreply::_internal_set_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace hello


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::hello::hello_GREET> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::hello::hello_GREET>() {
  return ::hello::hello_GREET_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // hello_2eproto_2epb_2eh
